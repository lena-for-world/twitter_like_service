extends layout

block content
  .timeline
    if user
      div
        form#twit-form(action='/post' method='post' enctype='multipart/form-data')
          .input-group
            textarea#twit(name='content' maxlength=140)
          .img-preview
            img#img-preview(src='' style='display: none;' width='250' alt='미리보기')
            input#img-url(type='hidden' name='url')
          div
            label#img-label(for='img') 사진 업로드
            input#img(type='file' accept='image/*')
            button#twit-btn.btn(type='submit') 짹짹
      .twits
        form#hashtag-form(action='/post/hashtag')
          input(type='text' name='hashtag' placeholder='태그검색')
          button.btn 검색
        for twit in twits
          .twit
            input.twit-user-id(type='hidden' value=twit.user.id)
            input.twit-id(type='hidden' value=twit.id)
            .twit-author= twit.user.nick
            -const follow = user && user.Followings.map(f => f.id).includes(twit.user.id); // user가 팔로잉 중인지 확인
            -console.log(follow);
            if user && user.id !== twit.user.id && !follow
              button.twit-follow 팔로우하기
            else if user && user.id !== twit.user.id && follow
              button.twit-unfollow 팔로우중
            .twit-content= twit.content
            if twit.img
              .twit-img
                img(src=twit.img alt='섬네일')
  script.
      if (document.getElementById('img')) {
      document.getElementById('img').addEventListener('change', function(e) {
          var formData = new FormData();
          console.log(this, this.files);
          formData.append('img', this.files[0]);
          var xhr = new XMLHttpRequest();
          xhr.onload = function() {
              if(xhr.status === 200) {
                  var url = JSON.parse(xhr.responseText).url;
                  document.getElementById('img-url').value = url;
                  document.getElementById('img-preview').src = url;
                  document.getElementById('img-preview').style.display = 'inline';
              } else {
                  console.error(xhr.responseText);
              }
            };
            xhr.open('POST', '/post/img');
            xhr.send(formData);
          });
      }
      document.querySelectorAll('.twit-follow').forEach(function(tag) {
        tag.addEventListener('click', function() {
            const myId = document.querySelector('#my-id');
            if (myId) {
            const userId = tag.parentNode.querySelector('.twit-user-id').value;
            if (userId !== myId.value) {
                if (confirm('팔로우하시겠습니까?')) {
                  var xhr = new XMLHttpRequest();
                  xhr.onload = function() {
                    // db에 결과를 저장해야 새로고침해도 '팔로 중' UI가 유지될듯
                    // ... 이렇게 생각했지만... 그냥 위에서 follow여부를 확인해서 다른 버튼을 띄워주면 될 일이었음
                    // 생각을 좀 간단히 하자
                      if(xhr.status === 200) {
                        location.reload();
                      } else {
                          console.error(xhr.responseText);
                      }
                  };
                  xhr.open('POST', '/user/' + userId + '/follow');
                  xhr.send();
                }
            }
          }
        });
      });
      document.querySelectorAll('.twit-unfollow').forEach(function(tag) {
        tag.addEventListener('click', function() {
          const myId = document.querySelector('#my-id');
            if (myId) {
              const userId = tag.parentNode.querySelector('.twit-user-id').value;
              if (confirm('언팔로우하시겠습니까?')) {
                var xhr = new XMLHttpRequest();
                xhr.onload = function() {
                  if(xhr.status === 200) {
                    location.reload();
                  } else {
                      console.error(xhr.responseText);
                  }
              };
                  xhr.open('POST', '/user/' + userId + '/unfollow');
                  xhr.send();
                }
            }
        });
      });